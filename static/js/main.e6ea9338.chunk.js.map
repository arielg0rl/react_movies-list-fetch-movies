{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/api.tsx","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","findMovieByTitle","title","a","url","fetch","then","res","ok","Error","json","Response","FindMovie","addMovie","useState","setTitle","setMovie","movieNotFound","setMovieNotFound","showPreview","setShowPreview","clearForm","findMovieButtonHandler","movieTitle","movieFromServer","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","classNames","value","onChange","target","onClick","App","setMovies","find","film","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e6ea9338.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","export const BASE_URL = 'https://www.omdbapi.com/?apikey=9ca89b69';\n\nexport const request = (url: string) => {\n  return fetch(`${BASE_URL}&t=${url}`)\n    .then(res => {\n      if (!res.ok) {\n        throw new Error('no movie with such name found');\n      }\n\n      return res.json();\n    });\n};\n\nexport const findMovieByTitle = async (title: string) => {\n  const movie = await request(title);\n\n  if (movie.Response === 'False') {\n    throw new Error('Error: djkhfdj');\n  }\n\n  return movie;\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\n\nimport { MovieCard } from '../MovieCard';\nimport { findMovieByTitle } from '../api';\n\nexport interface Props {\n  addMovie: (movie: Movie) => void;\n}\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [title, setTitle] = useState<string>('');\n  const [movie, setMovie] = useState<Movie>({\n    Poster: '',\n    Title: '',\n    Plot: '',\n    imdbID: '',\n  });\n  const [movieNotFound, setMovieNotFound] = useState<boolean>(false);\n  const [showPreview, setShowPreview] = useState<boolean>(false);\n\n  const clearForm = () => {\n    setTitle('');\n    setShowPreview(false);\n  };\n\n  const findMovieButtonHandler = async (movieTitle: string) => {\n    try {\n      const movieFromServer = await findMovieByTitle(movieTitle);\n\n      if (movieFromServer) {\n        setMovie(movieFromServer);\n\n        setMovieNotFound(false);\n        setShowPreview(true);\n      }\n    } catch {\n      setMovieNotFound(true);\n      clearForm();\n    }\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    addMovie(movie);\n    clearForm();\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setMovieNotFound(false);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                id=\"movie-title\"\n                placeholder=\"Enter a title to search\"\n                className={classNames('input', { 'is-danger': movieNotFound })}\n                value={title}\n                onChange={handleChange}\n              />\n            </div>\n          </label>\n          {movieNotFound && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              value={title}\n              onClick={() => findMovieButtonHandler(title)}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {showPreview && <MovieCard movie={movie} />}\n      </div>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (movie: Movie) => {\n    if (!movies.find(film => movie.imdbID === film.imdbID)) {\n      setMovies([...movies, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}